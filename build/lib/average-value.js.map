{
  "version": 3,
  "sources": ["../../src/lib/average-value.ts"],
  "sourcesContent": ["import { AdapterInstance } from '@iobroker/adapter-core';\nimport { createObjectNum } from './dp-handler';\nimport { getStateAsNumber } from './util/state-util';\n\n// TODO instance number and other values configurable\nconst customInflux = {\n\t'influxdb.0': {\n\t\tenabled: true,\n\t\tstorageType: '',\n\t\taliasId: '',\n\t\tdebounceTime: 0,\n\t\tblockTime: 0,\n\t\tchangesOnly: true,\n\t\tchangesRelogInterval: 600,\n\t\tchangesMinDelta: 0.1,\n\t\tignoreBelowNumber: '',\n\t\tdisableSkippedValueLogging: false,\n\t\tenableDebugLogs: false,\n\t\tdebounce: '1000',\n\t},\n};\n\n// TODO instance number and other values configurable\nconst customHistory = {\n\t'history.0': {\n\t\tenabled: true,\n\t\taliasId: '',\n\t\tdebounceTime: 0,\n\t\tblockTime: 0,\n\t\tchangesOnly: true,\n\t\tchangesRelogInterval: 600,\n\t\tchangesMinDelta: 0.1,\n\t\tignoreBelowNumber: '',\n\t\tdisableSkippedValueLogging: false,\n\t\tretention: 604800,\n\t\tcustomRetentionDuration: 365,\n\t\tmaxLength: 960,\n\t\tenableDebugLogs: false,\n\t\tdebounce: 1000,\n\t},\n};\n\nexport class AverageValue {\n\tpublic readonly xidSource?: string;\n\tpublic readonly name: string;\n\tpublic readonly desc?: string;\n\tprivate _xidCurrent = '';\n\tpublic get xidCurrent(): string {\n\t\treturn this._xidCurrent;\n\t}\n\tprivate _xidAvg = '';\n\tpublic get xidAvg(): string {\n\t\treturn this._xidAvg;\n\t}\n\tprivate _xidAvg5 = '';\n\tpublic get xidAvg5(): string {\n\t\treturn this._xidAvg5;\n\t}\n\n\tpublic readonly mutation?: (number: number) => Promise<number>;\n\n\tprivate constructor(\n\t\tprivate adapter: AdapterInstance,\n\t\tname: string,\n\t\tprops?: { xidSource?: string; desc?: string; unit?: string; mutation?: (number: number) => Promise<number> },\n\t) {\n\t\tthis.xidSource = props?.xidSource;\n\t\tthis.name = name;\n\t\tthis.desc = props?.desc;\n\n\t\tthis.mutation = props?.mutation;\n\n\t\tif (!this.mutation && !this.xidSource) {\n\t\t\tthrow new Error(`${name}: Es d\u00FCrfen nicht xidSource UND Mutation undefniert sein!`);\n\t\t}\n\t}\n\n\tstatic async build(\n\t\tadapter: AdapterInstance,\n\t\tname: string,\n\t\tprops?: { xidSource?: string; desc?: string; unit?: string; mutation?: (number: number) => Promise<number> },\n\t): Promise<AverageValue> {\n\t\tconst val = new AverageValue(adapter, name, props);\n\n\t\tval._xidCurrent = val.createStates(adapter, 'current', { unit: props?.unit, custom: customHistory });\n\t\tval._xidAvg = val.createStates(adapter, 'last-10-min', {\n\t\t\tdescAddon: ' der letzten 10 Minuten',\n\t\t\tunit: props?.unit,\n\t\t\tcustom: customInflux,\n\t\t});\n\n\t\tval._xidAvg5 = val.createStates(adapter, 'last-5-min', {\n\t\t\tdescAddon: ' der letzten 5 Minuten',\n\t\t\tunit: props?.unit,\n\t\t});\n\n\t\treturn val;\n\t}\n\n\tprivate createStates(\n\t\tcontext: AdapterInstance,\n\t\tsubItem: string,\n\t\tprops?: { descAddon?: string; unit?: string; custom?: Record<string, any> },\n\t): string {\n\t\tconst xid = `avg.${this.name}.${subItem}`;\n\t\tcreateObjectNum(context, xid, 0, {\n\t\t\tdesc: `${this.desc ?? this.name} ${props?.descAddon}`,\n\t\t\tunit: props?.unit ?? 'kW',\n\t\t\tcustom: props?.custom,\n\t\t});\n\t\treturn xid;\n\t}\n\n\tpublic async getCurrent(): Promise<number> {\n\t\treturn await this.getValue(this.xidCurrent);\n\t}\n\n\tpublic async get5Min(): Promise<number> {\n\t\treturn await this.getValue(this.xidAvg5);\n\t}\n\n\tpublic async get10Min(): Promise<number> {\n\t\treturn await this.getValue(this.xidAvg);\n\t}\n\n\tprivate async getValue(xid: string): Promise<number> {\n\t\tconst value = await getStateAsNumber(this.adapter, xid);\n\n\t\tif (!value) {\n\t\t\tconsole.error(`Could not retrieve value for ${xid}`);\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (typeof value !== 'number') {\n\t\t\tconsole.error(`Value '${value}' for ${xid} is not a number!`);\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
