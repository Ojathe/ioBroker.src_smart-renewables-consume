{
  "version": 3,
  "sources": ["../../src/values/xid.ts"],
  "sourcesContent": ["import { AdapterInstance } from '@iobroker/adapter-core';\nimport { createObject } from '../util/create-objects-helper';\n\nexport interface CreateXIdProps {\n\taccess?: { read: boolean, write: boolean },\n\tdesc?: string;\n\tunit?: string;\n\tcustom?: Record<string, any>\n}\n\nexport class XId<T extends ioBroker.StateValue> {\n\tprotected constructor(\n\t\tpublic readonly xid: string,\n\t\tprivate readonly adapter: AdapterInstance,\n\t\tprivate readonly isManaged: boolean = false,\n\t) {\n\t}\n\n\tstatic async asManagedBase<T extends ioBroker.StateValue>(\n\t\tadapter: AdapterInstance,\n\t\txid: string,\n\t\ttypeName: ioBroker.CommonType,\n\t\tdefaultValue: T,\n\t\tprops: CreateXIdProps = {},\n\t): Promise<XId<T>> {\n\t\tconst object = await adapter.getObjectAsync(xid);\n\t\tif (!object) {\n\t\t\tconst { desc, unit, custom } = props;\n\n\t\t\tawait createObject<T>(adapter, xid, typeName, defaultValue, {\n\t\t\t\tdesc, unit, custom,\n\t\t\t}, props?.access);\n\t\t}\n\t\tconst state = await adapter.getStateAsync(xid);\n\t\tif (!state) {\n\t\t\tthrow new Error(`Non existing State '${xid}'`);\n\t\t}\n\n\t\treturn new XId(xid, adapter, true);\n\t}\n\n\tprotected static async asReadableBase<T extends ioBroker.StateValue>(\n\t\tadapter: AdapterInstance,\n\t\txid: string,\n\t\ttypeName: ioBroker.CommonType,\n\t): Promise<XId<T>> {\n\t\tconst state = await adapter.getStateAsync(xid);\n\t\tconst object = await adapter.getObjectAsync(xid);\n\n\t\tif (!state || !object) {\n\t\t\tthrow new Error(`Non existing State '${xid}'`);\n\t\t}\n\n\t\tif (object.common.type !== typeName) {\n\t\t\tthrow new Error(`Mismatching type for state  '${xid}' (expected: ${typeName}, given: ${object.common.type})`);\n\t\t}\n\t\treturn new XId(xid, adapter);\n\t}\n\n\tpublic async getValue(): Promise<T> {\n\t\tconst val = (await this.adapter.getStateAsync(this.xid))?.val;\n\n\t\tif (val === undefined) {\n\t\t\tthrow new Error('No value present in state: ' + this.xid);\n\t\t}\n\n\t\treturn val as T;\n\t}\n\n\tpublic async setValue(value: T): ioBroker.SetStatePromise {\n\t\tif (!this.isManaged) {\n\t\t\tthrow new Error('Non managed xid\\'s are not allowed to write values: ' + this.xid);\n\t\t}\n\n\t\treturn this.adapter.setStateAsync(this.xid, value, true);\n\t}\n}\n\nexport class XidString extends XId<string> {\n\tstatic async asReadable(adapter: AdapterInstance, xid: string): Promise<XidString> {\n\t\treturn XId.asReadableBase<string>(adapter, xid, 'string');\n\t}\n}\n\nexport class XidBool extends XId<boolean> {\n\tstatic async asReadable(adapter: AdapterInstance, xid: string): Promise<XidBool> {\n\t\treturn XId.asReadableBase<boolean>(adapter, xid, 'boolean');\n\t}\n}\n\nexport class XidNumber extends XId<number> {\n\tstatic async asReadable(adapter: AdapterInstance, xid: string): Promise<XidNumber> {\n\t\treturn XId.asReadableBase<number>(adapter, xid, 'number');\n\t}\n\n\tstatic async asManaged(adapter: AdapterInstance, xid: string, defaultValue: number = 0, props?: CreateXIdProps): Promise<XidNumber> {\n\t\treturn XId.asManagedBase<number>(adapter, xid, 'number', defaultValue, props);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mCAA6B;AAStB,MAAM,IAAmC;AAAA,EACrC,YACO,KACC,SACA,YAAqB,OACrC;AAHe;AACC;AACA;AAAA,EAElB;AAAA,EAEA,aAAa,cACZ,SACA,KACA,UACA,cACA,QAAwB,CAAC,GACP;AAClB,UAAM,SAAS,MAAM,QAAQ,eAAe,GAAG;AAC/C,QAAI,CAAC,QAAQ;AACZ,YAAM,EAAE,MAAM,MAAM,OAAO,IAAI;AAE/B,gBAAM,2CAAgB,SAAS,KAAK,UAAU,cAAc;AAAA,QAC3D;AAAA,QAAM;AAAA,QAAM;AAAA,MACb,GAAG,+BAAO,MAAM;AAAA,IACjB;AACA,UAAM,QAAQ,MAAM,QAAQ,cAAc,GAAG;AAC7C,QAAI,CAAC,OAAO;AACX,YAAM,IAAI,MAAM,uBAAuB,GAAG,GAAG;AAAA,IAC9C;AAEA,WAAO,IAAI,IAAI,KAAK,SAAS,IAAI;AAAA,EAClC;AAAA,EAEA,aAAuB,eACtB,SACA,KACA,UACkB;AAClB,UAAM,QAAQ,MAAM,QAAQ,cAAc,GAAG;AAC7C,UAAM,SAAS,MAAM,QAAQ,eAAe,GAAG;AAE/C,QAAI,CAAC,SAAS,CAAC,QAAQ;AACtB,YAAM,IAAI,MAAM,uBAAuB,GAAG,GAAG;AAAA,IAC9C;AAEA,QAAI,OAAO,OAAO,SAAS,UAAU;AACpC,YAAM,IAAI,MAAM,gCAAgC,GAAG,gBAAgB,QAAQ,YAAY,OAAO,OAAO,IAAI,GAAG;AAAA,IAC7G;AACA,WAAO,IAAI,IAAI,KAAK,OAAO;AAAA,EAC5B;AAAA,EAEA,MAAa,WAAuB;AA3DrC;AA4DE,UAAM,OAAO,WAAM,KAAK,QAAQ,cAAc,KAAK,GAAG,MAAzC,mBAA6C;AAE1D,QAAI,QAAQ,QAAW;AACtB,YAAM,IAAI,MAAM,gCAAgC,KAAK,GAAG;AAAA,IACzD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,SAAS,OAAoC;AACzD,QAAI,CAAC,KAAK,WAAW;AACpB,YAAM,IAAI,MAAM,wDAAyD,KAAK,GAAG;AAAA,IAClF;AAEA,WAAO,KAAK,QAAQ,cAAc,KAAK,KAAK,OAAO,IAAI;AAAA,EACxD;AACD;AAEO,MAAM,kBAAkB,IAAY;AAAA,EAC1C,aAAa,WAAW,SAA0B,KAAiC;AAClF,WAAO,IAAI,eAAuB,SAAS,KAAK,QAAQ;AAAA,EACzD;AACD;AAEO,MAAM,gBAAgB,IAAa;AAAA,EACzC,aAAa,WAAW,SAA0B,KAA+B;AAChF,WAAO,IAAI,eAAwB,SAAS,KAAK,SAAS;AAAA,EAC3D;AACD;AAEO,MAAM,kBAAkB,IAAY;AAAA,EAC1C,aAAa,WAAW,SAA0B,KAAiC;AAClF,WAAO,IAAI,eAAuB,SAAS,KAAK,QAAQ;AAAA,EACzD;AAAA,EAEA,aAAa,UAAU,SAA0B,KAAa,eAAuB,GAAG,OAA4C;AACnI,WAAO,IAAI,cAAsB,SAAS,KAAK,UAAU,cAAc,KAAK;AAAA,EAC7E;AACD;",
  "names": []
}
