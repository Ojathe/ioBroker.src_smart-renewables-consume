{
  "version": 3,
  "sources": ["../../src/repositories/eeg-repository.ts"],
  "sourcesContent": ["import { XidBool, XidNumber } from '../values/xid';\nimport { AdapterInstance } from '@iobroker/adapter-core';\n\nexport const INTERNAL_STATE_EEG = {\n\tBONUS: 'eeg-state.bonus',\n\tLOSS: 'eeg-state.loss',\n\tSOC_LAST_BONUS: 'eeg-state.soc-last-bonus',\n\tOPERATION: 'eeg-state.operation',\n};\n\nexport interface EegRepository {\n\tbonus: XidBool,\n\tloss: XidBool,\n\tsocLastBonus: XidNumber,\n\toperating: XidBool\n}\n\nexport class EegRepositoryImpl implements EegRepository {\n\tprivate constructor() {\n\t}\n\n\tprivate _bonus: XidBool | undefined;\n\n\tget bonus(): XidBool {\n\t\treturn this._bonus!;\n\t}\n\n\tprivate _loss: XidBool | undefined;\n\n\tget loss(): XidBool {\n\t\treturn this._loss!;\n\t}\n\n\tprivate _operating: XidBool | undefined;\n\n\tget operating(): XidBool {\n\t\treturn this._operating!;\n\t}\n\n\tprivate _socLastBonus: XidNumber | undefined;\n\n\tget socLastBonus(): XidNumber {\n\t\treturn this._socLastBonus!;\n\t}\n\n\tstatic async create(adapter: AdapterInstance): Promise<EegRepository> {\n\n\t\tconst repo = new EegRepositoryImpl();\n\n\t\trepo._bonus = await XidBool.asManaged(adapter, INTERNAL_STATE_EEG.BONUS, false, { desc: 'True, if there is more Power then used' });\n\t\trepo._loss = await XidBool.asManaged(adapter, INTERNAL_STATE_EEG.LOSS, false, { desc: 'True, if there is less Power then used' });\n\t\trepo._operating = await XidBool.asManaged(adapter, INTERNAL_STATE_EEG.OPERATION, false, { desc: 'True, if the system should be managed' });\n\n\n\t\trepo._socLastBonus = await XidNumber.asManaged(adapter, INTERNAL_STATE_EEG.SOC_LAST_BONUS, 0, {\n\t\t\tdesc: 'Batteries SoC when the last Bonus was detected',\n\t\t\tunit: '%',\n\t\t});\n\n\t\treturn repo;\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmC;AAG5B,MAAM,qBAAqB;AAAA,EACjC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,WAAW;AACZ;AASO,MAAM,kBAA2C;AAAA,EAC/C,cAAc;AAAA,EACtB;AAAA,EAEQ;AAAA,EAER,IAAI,QAAiB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EAER,IAAI,OAAgB;AACnB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EAER,IAAI,YAAqB;AACxB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EAER,IAAI,eAA0B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,aAAa,OAAO,SAAkD;AAErE,UAAM,OAAO,IAAI,kBAAkB;AAEnC,SAAK,SAAS,MAAM,mBAAQ,UAAU,SAAS,mBAAmB,OAAO,OAAO,EAAE,MAAM,yCAAyC,CAAC;AAClI,SAAK,QAAQ,MAAM,mBAAQ,UAAU,SAAS,mBAAmB,MAAM,OAAO,EAAE,MAAM,yCAAyC,CAAC;AAChI,SAAK,aAAa,MAAM,mBAAQ,UAAU,SAAS,mBAAmB,WAAW,OAAO,EAAE,MAAM,wCAAwC,CAAC;AAGzI,SAAK,gBAAgB,MAAM,qBAAU,UAAU,SAAS,mBAAmB,gBAAgB,GAAG;AAAA,MAC7F,MAAM;AAAA,MACN,MAAM;AAAA,IACP,CAAC;AAED,WAAO;AAAA,EACR;AACD;",
  "names": []
}
