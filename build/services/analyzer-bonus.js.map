{
  "version": 3,
  "sources": ["../../src/services/analyzer-bonus.ts"],
  "sourcesContent": ["import { PowerRepository } from '../repositories/power-repository';\nimport { LandingZoneRepository } from '../repositories/landing-zone-repository';\nimport { EegRepository } from '../repositories/eeg-repository';\n\nexport interface AnalyzerBonusProps {\n\tgetSellingThreshold: () => number;\n\tgetBonusReportThreshold: () => number;\n\tgetBatChargeMinimum: () => number;\n}\n\nexport class AnalyzerBonus {\n\t// TODO move to config\n\tpublic static readonly sellingThreshold: number = 0.2;\n\tpublic static readonly bonusReportThreshold: number = 0.1;\n\tpublic static readonly batChargeMinimum: number = 10;\n\n\tconstructor(private powerRepo: PowerRepository, private landingZoneRepo: LandingZoneRepository, private eegRepo: EegRepository) {\n\t}\n\n\tpublic async run(): Promise<void> {\n\t\t// TODO investigate on how to configure values\n\t\t// TODO PV Connection\n\n\t\tlet powerBonus = false;\n\n\t\t// Energy, missing (<0) oder additionally (>0) related to the household load\n\t\tconst powerDif = await this.powerRepo.current.powerBalance();\n\t\tconst powerDifAvg = await this.powerRepo.avg.powerBalance();\n\t\tconst gridPowerAvg = await this.powerRepo.avg.powerGrid();\n\n\t\tconst batSoC = await this.landingZoneRepo.batterySoC.getValue();\n\n\t\t// bonus when positive power balance\n\t\tif (gridPowerAvg > AnalyzerBonus.sellingThreshold) {\n\t\t\tpowerBonus = true;\n\t\t}\n\n\t\t// bonus when grid selling\n\t\tif (powerDifAvg > AnalyzerBonus.bonusReportThreshold) {\n\t\t\tpowerBonus = true;\n\t\t}\n\n\t\t// no bonus, when battery is lower or the current power balance is negative\n\t\tif (batSoC <= AnalyzerBonus.batChargeMinimum || powerDif < 0) {\n\t\t\tpowerBonus = false;\n\t\t}\n\n\t\tconst msg = `BonusAnalysis # Bonus PowerDif=${powerDif} PowerDifAvg=${powerDifAvg} => powerBonus:${powerBonus} SOC=${batSoC}`;\n\n\t\tconst reportedBonus = await this.eegRepo.bonus.getValue();\n\t\tif (powerBonus && !reportedBonus) {\n\t\t\tconsole.log(msg + ' || STATE CHANGED');\n\t\t} else {\n\t\t\tconsole.debug(msg);\n\t\t}\n\n\t\t// update battery stand of charge\n\t\tif (powerBonus) {\n\t\t\tawait this.eegRepo.socLastBonus.setValue(batSoC);\n\t\t}\n\n\t\t// Update the state\n\t\tawait this.eegRepo.bonus.setValue(powerBonus);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUO,MAAM,cAAc;AAAA,EAM1B,YAAoB,WAAoC,iBAAgD,SAAwB;AAA5G;AAAoC;AAAgD;AAAA,EACxG;AAAA;AAAA,EALA,OAAuB,mBAA2B;AAAA,EAClD,OAAuB,uBAA+B;AAAA,EACtD,OAAuB,mBAA2B;AAAA,EAKlD,MAAa,MAAqB;AAIjC,QAAI,aAAa;AAGjB,UAAM,WAAW,MAAM,KAAK,UAAU,QAAQ,aAAa;AAC3D,UAAM,cAAc,MAAM,KAAK,UAAU,IAAI,aAAa;AAC1D,UAAM,eAAe,MAAM,KAAK,UAAU,IAAI,UAAU;AAExD,UAAM,SAAS,MAAM,KAAK,gBAAgB,WAAW,SAAS;AAG9D,QAAI,eAAe,cAAc,kBAAkB;AAClD,mBAAa;AAAA,IACd;AAGA,QAAI,cAAc,cAAc,sBAAsB;AACrD,mBAAa;AAAA,IACd;AAGA,QAAI,UAAU,cAAc,oBAAoB,WAAW,GAAG;AAC7D,mBAAa;AAAA,IACd;AAEA,UAAM,MAAM,kCAAkC,QAAQ,gBAAgB,WAAW,kBAAkB,UAAU,QAAQ,MAAM;AAE3H,UAAM,gBAAgB,MAAM,KAAK,QAAQ,MAAM,SAAS;AACxD,QAAI,cAAc,CAAC,eAAe;AACjC,cAAQ,IAAI,MAAM,mBAAmB;AAAA,IACtC,OAAO;AACN,cAAQ,MAAM,GAAG;AAAA,IAClB;AAGA,QAAI,YAAY;AACf,YAAM,KAAK,QAAQ,aAAa,SAAS,MAAM;AAAA,IAChD;AAGA,UAAM,KAAK,QAAQ,MAAM,SAAS,UAAU;AAAA,EAC7C;AACD;",
  "names": []
}
