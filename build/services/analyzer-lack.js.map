{
  "version": 3,
  "sources": ["../../src/services/analyzer-lack.ts"],
  "sourcesContent": ["import { PowerRepository } from '../repositories/power-repository';\nimport { LandingZoneRepository } from '../repositories/landing-zone-repository';\nimport { EegRepository } from '../repositories/eeg-repository';\n\nexport class AnalyzerLack {\n\t// TODO move to config\n\tpublic static readonly lackReportingThreshold = -0.5;\n\tpublic static readonly gridBuyingThreshold = -0.2;\n\n\tconstructor(private powerRepo: PowerRepository, private landingZoneRepo: LandingZoneRepository, private eegRepo: EegRepository) {\n\t}\n\n\tpublic async run(): Promise<void> {\n\t\t// TODO investigate on how to configure values\n\t\t// if (!this.adapter.config.optionEnergyManagementActive) {\n\t\t// \tconsole.log('Energy Management is not active.');\n\t\t// \treturn;\n\t\t// }\n\n\t\tlet powerLack = false;\n\n\t\t// Energy, missing (<0) oder additionally (>0) related to the household load\n\t\tconst powerDifAvg5 = await this.powerRepo.avg5.powerBalance();\n\t\tconst gridPowerAvg5 = await this.powerRepo.avg5.powerGrid();\n\t\tconst batSoC = await this.landingZoneRepo.batterySoC.getValue();\n\n\t\t// TODO PV Connection\n\t\t// Mangel, wenn\n\t\t//\t-> mindestens 2kW vom Stromnetz/AKku bezogen werden,\n\t\t//\t-> der Akku weniger als 95% hat\n\t\t//\t-> kaum bis keine Solarstrahlung existiert\n\t\tif (powerDifAvg5 < -1.9 && batSoC < 95) {\n\t\t\tpowerLack = true;\n\t\t}\n\n\t\t// Mangel, wenn\n\t\t//\t-> mindestens 1kW vom Stromnetz / Akku bezogen werden\n\t\t//\t-> der Akkustand unterhalb von 60% ist\n\t\tif (powerDifAvg5 < -0.9 && batSoC < 60) {\n\t\t\tpowerLack = true;\n\t\t}\n\n\t\t// Mangel, wenn\n\t\t//    -> mindestens 0,5kW vom Stromnetz / Akku bezogen werden\n\t\t//    -> der Akku unterhalb 30% ist\n\t\tif (powerDifAvg5 < -0.5 && batSoC < 30) {\n\t\t\tpowerLack = true;\n\t\t}\n\n\t\t// Mangel, wenn\n\t\t//    -> \u00FCberhaupt vom Stromnetz / Akku bezogen werden\n\t\t//    -> der Akku unterhalb 10% ist\n\t\tif (powerDifAvg5 < 0 && batSoC < 10) {\n\t\t\tpowerLack = true;\n\t\t}\n\n\t\t// Mangel forcen, wenn vom Stromnetz genommen wird\n\t\tif (gridPowerAvg5 <= AnalyzerLack.gridBuyingThreshold) {\n\t\t\tpowerLack = true;\n\t\t}\n\n\t\tconst msg = `LackAnalysis # Lack GridPowerAvg5=${gridPowerAvg5} => PowerLack:${powerLack} SOC=${batSoC}`;\n\t\tconst reportedLack = await this.eegRepo.loss.getValue();\n\n\t\tif (powerLack && !reportedLack) {\n\t\t\tconsole.log(msg + ' || STATE CHANGED');\n\t\t} else {\n\t\t\tconsole.debug(msg);\n\t\t}\n\n\t\t// Update the state\n\t\tawait this.eegRepo.loss.setValue(powerLack);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAM,aAAa;AAAA,EAKzB,YAAoB,WAAoC,iBAAgD,SAAwB;AAA5G;AAAoC;AAAgD;AAAA,EACxG;AAAA;AAAA,EAJA,OAAuB,yBAAyB;AAAA,EAChD,OAAuB,sBAAsB;AAAA,EAK7C,MAAa,MAAqB;AAOjC,QAAI,YAAY;AAGhB,UAAM,eAAe,MAAM,KAAK,UAAU,KAAK,aAAa;AAC5D,UAAM,gBAAgB,MAAM,KAAK,UAAU,KAAK,UAAU;AAC1D,UAAM,SAAS,MAAM,KAAK,gBAAgB,WAAW,SAAS;AAO9D,QAAI,eAAe,QAAQ,SAAS,IAAI;AACvC,kBAAY;AAAA,IACb;AAKA,QAAI,eAAe,QAAQ,SAAS,IAAI;AACvC,kBAAY;AAAA,IACb;AAKA,QAAI,eAAe,QAAQ,SAAS,IAAI;AACvC,kBAAY;AAAA,IACb;AAKA,QAAI,eAAe,KAAK,SAAS,IAAI;AACpC,kBAAY;AAAA,IACb;AAGA,QAAI,iBAAiB,aAAa,qBAAqB;AACtD,kBAAY;AAAA,IACb;AAEA,UAAM,MAAM,qCAAqC,aAAa,iBAAiB,SAAS,QAAQ,MAAM;AACtG,UAAM,eAAe,MAAM,KAAK,QAAQ,KAAK,SAAS;AAEtD,QAAI,aAAa,CAAC,cAAc;AAC/B,cAAQ,IAAI,MAAM,mBAAmB;AAAA,IACtC,OAAO;AACN,cAAQ,MAAM,GAAG;AAAA,IAClB;AAGA,UAAM,KAAK,QAAQ,KAAK,SAAS,SAAS;AAAA,EAC3C;AACD;",
  "names": []
}
