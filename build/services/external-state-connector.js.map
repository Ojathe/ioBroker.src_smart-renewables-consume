{
  "version": 3,
  "sources": ["../../src/services/external-state-connector.ts"],
  "sourcesContent": ["import { AdapterInstance } from '@iobroker/adapter-core';\nimport { EXTERNAL_STATE_LANDINGZONE } from '../repositories/landing-zone-repository';\n\nexport class ExternalStateConnector {\n\n\tprivate constructor(private readonly adapter: AdapterInstance, private readonly config: ioBroker.AdapterConfig) {\n\t}\n\n\tstatic async create(adapter: AdapterInstance, config: ioBroker.AdapterConfig): Promise<ExternalStateConnector> {\n\n\t\tconst connector = new ExternalStateConnector(adapter, config);\n\t\tawait connector.initialize();\n\t\tconnector.addSubscriptions();\n\n\t\treturn connector;\n\t}\n\n\tpublic onSubscribedStateChanged(externalId: string, value: any): void {\n\t\tconst xidtoUpdate = this.getInnerStateXid(externalId);\n\t\tif (xidtoUpdate) {\n\t\t\tthis.adapter.setState(xidtoUpdate, { val: value, ack: true });\n\t\t\tconsole.debug(`Updating ingoing-value '${xidtoUpdate}' from '${externalId}' with '${value}'`);\n\t\t}\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\t// TODO Work in progress\n\t\tconst configToMap = [\n\t\t\tthis.config.optionSourcePvGeneration,\n\t\t\tthis.config.optionSourceBatterySoc,\n\t\t\tthis.config.optionSourceIsGridBuying,\n\t\t\tthis.config.optionSourceIsGridLoad,\n\t\t\tthis.config.optionSourceSolarRadiation,\n\t\t\tthis.config.optionSourceTotalLoad,\n\t\t\tthis.config.optionSourceBatteryLoad,\n\t\t];\n\n\t\tfor (const externalId of configToMap) {\n\t\t\tconst state = await this.adapter.getForeignStateAsync(externalId);\n\t\t\tthis.onSubscribedStateChanged(externalId, state?.val);\n\t\t}\n\t}\n\n\tprivate getInnerStateXid(externalId: string): string | undefined {\n\t\tlet xidtoUpdate;\n\t\tswitch (externalId) {\n\t\t\tcase this.config.optionSourcePvGeneration:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.PV_GENERATION;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceBatterySoc:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.BAT_SOC;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceIsGridBuying:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.IS_GRID_BUYING;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceIsGridLoad:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.GRID_LOAD;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceSolarRadiation:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.SOLAR_RADIATION;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceTotalLoad:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.TOTAL_LOAD;\n\t\t\t\tbreak;\n\t\t\tcase this.config.optionSourceBatteryLoad:\n\t\t\t\txidtoUpdate = EXTERNAL_STATE_LANDINGZONE.BAT_LOAD;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn xidtoUpdate;\n\t}\n\n\tprivate addSubscriptions(): void {\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourcePvGeneration);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceTotalLoad);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceBatterySoc);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceSolarRadiation);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceIsGridBuying);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceIsGridLoad);\n\t\tthis.adapter.subscribeForeignStates(this.config.optionSourceBatteryLoad);\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qCAA2C;AAEpC,MAAM,uBAAuB;AAAA,EAE3B,YAA6B,SAA2C,QAAgC;AAA3E;AAA2C;AAAA,EAChF;AAAA,EAEA,aAAa,OAAO,SAA0B,QAAiE;AAE9G,UAAM,YAAY,IAAI,uBAAuB,SAAS,MAAM;AAC5D,UAAM,UAAU,WAAW;AAC3B,cAAU,iBAAiB;AAE3B,WAAO;AAAA,EACR;AAAA,EAEO,yBAAyB,YAAoB,OAAkB;AACrE,UAAM,cAAc,KAAK,iBAAiB,UAAU;AACpD,QAAI,aAAa;AAChB,WAAK,QAAQ,SAAS,aAAa,EAAE,KAAK,OAAO,KAAK,KAAK,CAAC;AAC5D,cAAQ,MAAM,2BAA2B,WAAW,WAAW,UAAU,WAAW,KAAK,GAAG;AAAA,IAC7F;AAAA,EACD;AAAA,EAEA,MAAc,aAA4B;AAEzC,UAAM,cAAc;AAAA,MACnB,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,IACb;AAEA,eAAW,cAAc,aAAa;AACrC,YAAM,QAAQ,MAAM,KAAK,QAAQ,qBAAqB,UAAU;AAChE,WAAK,yBAAyB,YAAY,+BAAO,GAAG;AAAA,IACrD;AAAA,EACD;AAAA,EAEQ,iBAAiB,YAAwC;AAChE,QAAI;AACJ,YAAQ,YAAY;AAAA,MACnB,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,MACD,KAAK,KAAK,OAAO;AAChB,sBAAc,0DAA2B;AACzC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,mBAAyB;AAChC,SAAK,QAAQ,uBAAuB,KAAK,OAAO,wBAAwB;AACxE,SAAK,QAAQ,uBAAuB,KAAK,OAAO,qBAAqB;AACrE,SAAK,QAAQ,uBAAuB,KAAK,OAAO,sBAAsB;AACtE,SAAK,QAAQ,uBAAuB,KAAK,OAAO,0BAA0B;AAC1E,SAAK,QAAQ,uBAAuB,KAAK,OAAO,wBAAwB;AACxE,SAAK,QAAQ,uBAAuB,KAAK,OAAO,sBAAsB;AACtE,SAAK,QAAQ,uBAAuB,KAAK,OAAO,uBAAuB;AAAA,EACxE;AACD;",
  "names": []
}
